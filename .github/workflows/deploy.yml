name: Deploy Board Game WebApp Infrastructure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: production

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Required Packages
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip

      - name: Install OWASP Dependency-Check
        run: |
          curl -L -o dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
          unzip dependency-check.zip
          sudo mv dependency-check /opt/dependency-check

      - name: Run OWASP Dependency-Check
        run: |
          /opt/dependency-check/bin/dependency-check.sh \
            --project "BoardGameListingApp" \
            --scan ./BoardGame \
            --disableAssembly \
            --format HTML \
            --out dependency-check-report

      - name: Upload Dependency-Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: dependency-check-report

      - name: Run Trivy File System Vulnerability Scan
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy fs --severity CRITICAL,HIGH .

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Get EC2 Public IP from Terraform Output
        id: tf_output
        run: |
          echo "ip=$(terraform output -raw ec2_public_ip)" >> $GITHUB_OUTPUT

      - name: Wait for EC2 to become available
        run: sleep 60

      - name: Deploy to EC2 via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ steps.tf_output.outputs.ip }}
          username: ubuntu             # 🔁 was: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "Starting Deployment on EC2..."

            sudo apt-get update
            sudo apt-get install -y git openjdk-17-jdk maven

            cd /home/ubuntu
            if [ ! -d "app" ]; then
              git clone https://github.com/DevOpsInstituteMumbai-wq/Automating-Secure-Deployment-of-Board-game-Listing-WebApp-on-AWS.git app
            else
              cd app
              git pull
            fi

            cd /home/ubuntu/app/BoardGame
            mvn clean package -DskipTests

            pkill -f 'java -jar' || true

            nohup java -jar target/*.jar > app.log 2>&1 &

            sleep 20
            if curl -sSf http://localhost:8080 > /dev/null; then
              echo "✅ App started successfully!"
            else
              echo "❌ App failed to start!"
              exit 1
            fi
