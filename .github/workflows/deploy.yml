name: Deploy Board Game WebApp Infrastructure

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: production

    steps:
    # Step 1: Checkout code
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Install Required Packages and Unzip Code
    - name: Install Required Packages and Unzip Code
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip curl
        unzip BoardGame.zip -d BoardGameApp

    # Step 3: Install OWASP Dependency-Check
    - name: Install OWASP Dependency-Check
      run: |
        curl -L -o dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/download/v8.4.0/dependency-check-8.4.0-release.zip
        unzip dependency-check.zip
        sudo mv dependency-check /opt/dependency-check

    # Step 4: Run OWASP Dependency-Check (fixed version)
    - name: Run OWASP Dependency-Check
      run: |
        /opt/dependency-check/bin/dependency-check.sh \
          --project "BoardGameListingApp" \
          --scan ./BoardGameApp \
          --disableAssembly \
          --format HTML \
          --out dependency-check-report

    # Step 5: Upload Dependency-Check Report
    - name: Upload Dependency-Check Report
      uses: actions/upload-artifact@v4
      with:
        name: dependency-check-report
        path: dependency-check-report

    # Step 6: Configure AWS credentials
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Step 7: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    # Step 8: Terraform Init
    - name: Terraform Init
      run: terraform init

    # Step 9: Terraform Plan
    - name: Terraform Plan
      run: terraform plan

    # Step 10: SonarQube Scan
    - name: SonarQube Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
        organization: ${{ secrets.SONAR_ORGANIZATION }}
        projectKey: ${{ secrets.SONAR_PROJECT_KEY }}
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    # Step 11: Terraform Apply
    - name: Terraform Apply
      run: terraform apply -auto-approve
